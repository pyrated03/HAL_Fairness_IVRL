[Arguments]

port = 8097
env = main

same_env = Yes
save_results = No

# project options
project_name=Gaussian-HSIC
result_subdir=Gaussian-HSIC
monitor={"metric": "loss", "decreasing": 1}

# dataset options
dataset=Gaussian4d
noise=0.005
feature_path = ./data/gaussian
dataset_type=Gaussian
dataset_options={"nsamples": 6000}

# model options
batch_size_test=6000
batch_size_train=500
model_type = EncDecGaussian
model_options = {"ndim":4, "nout":16, "r":15, "hdl_enc":15, "hdl_tgt":16}
r = 15
model_adv_type = AdvGaussian
model_options_adv = {"nout":4, "r":15, "hdl":10}


control_type = GaussianHSICClassification

kernel_type = GaussianKernel
kernel_labels = yes

# centering = True

sigma_x = 0.4947
sigma_y = 0.4852
sigma_s = 1.0507

cholesky_factor = 1

# loss options
loss_type = Classification
loss_options={}

adv_loss_type = Regression
adv_loss_options={}

evaluation_type = Accuracy
evaluation_options={}

adv_evaluation_type = MeanSquaredError
adv_evaluation_options={}

tau = 0.0

kernel_reg = 1e-1
gaussian_sigma = GaussianSigma
# fairness_type = DEP
# fairness_type = DEPHSIC
fairness_type = DEPKCC
fairness_options = {}

manual_seed = 0
nepochs = 1000
num_init_epochs = 200
check_val_every_n_epochs = 500
control_epoch = 0

optim_method = AdamW
learning_rate = 3e-4

# optim_options = {"momentum": 0.9, "weight_decay": 2e-5}
optim_options = {"weight_decay": 2e-5}


scheduler_method = StepLR
scheduler_options = {"step_size": 300, "gamma": 0.95}

#scheduler_method = CosineAnnealingLR
#scheduler_options = {"T_max": 5}

# cpu/gpu settings
ngpu = 1
nthreads = 2